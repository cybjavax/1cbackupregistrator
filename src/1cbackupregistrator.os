#Использовать v8runner
#Использовать logos

Перем _текущийКаталог;
Перем _каталогБазы;
Перем _логин;
Перем _пароль;
Перем _копируемыйФайл;
Перем _каталогРегистратора;
Перем _маскаФайлов;
Перем _расширениеФайлов;
Перем _имяФайловЗаписи;
Перем _файловОставлять;
Перем Лог;

Процедура Бэкап() Экспорт
    //сохраняем рабочий cf
    //Конфигуратор = Новый УправлениеКонфигуратором();
    //Конфигуратор.УстановитьКонтекст("/F"+_каталогБазы, _логин, _пароль);
    //Конфигуратор.ВыгрузитьКонфигурациюВФайл(_текущийКаталог+ "\ночнаявыгрузка.cf");
    //Лог.Информация(Строка(ТекущаяДата())+" Создан cf ночной выгрузки");

    //копируем файл базы, не ожидая выхода пользователей
    КопироватьФайл(_каталогБазы+"\1Cv8.1CD", _текущийКаталог+"\base\1Cv8.1CD");
    Лог.Информация(Строка(ТекущаяДата())+" Скопирована файловая база 1С");

    //делаем выгрузку в dt
    Конфигуратор = Новый УправлениеКонфигуратором();
    Конфигуратор.УстановитьКонтекст("/F"+_текущийКаталог+"\base", _логин, _пароль);
    Конфигуратор.ВыгрузитьИнформационнуюБазу(_текущийКаталог+"\ночнаявыгрузка.dt");
    Лог.Информация(Строка(ТекущаяДата())+" Создан dt ночной выгрузки");
КонецПроцедуры

Процедура ДействиеКопии() Экспорт
	Сообщить("Создаем копию...");
	Лог.Информация(Строка(ТекущаяДата())+" Создана копия dt "+Строка(ТекущаяДата()));
	КопироватьФайл(_текущийКаталог+"\"+_копируемыйФайл, _каталогРегистратора+_имяФайловЗаписи+Формат(ТекущаяДата(),"ДФ='yyyyMMddHHmmss'")+_расширениеФайлов);
КонецПроцедуры

Функция ПолучитьСписокФайлов() Экспорт
	Сообщить("Получаем список файлов...");
	Лог.Информация(Строка(ТекущаяДата())+" Получен список файлов");
    //получаем список файлов в каталоге записи и сортируем его по убыванию
    массивФайлов = НайтиФайлы(_каталогРегистратора, _маскаФайлов);

    //сортируем по убыванию
    Для и1 = 1 По массивФайлов.Количество() Цикл
        Для и2 = и1 По массивФайлов.Количество() Цикл
            Если массивФайлов[и2-1].Имя > массивФайлов[и1-1].Имя Тогда
                врем = массивФайлов[и1-1];
                массивФайлов[и1-1] = массивФайлов[и2-1];
                массивФайлов[и2-1] = врем;    
            КонецЕсли;
        КонецЦикла;
    КонецЦикла;

	Возврат массивФайлов;
КонецФункции

Процедура УдаляемЛишниеКопии(массивФайлов) Экспорт
    Сообщить("Удаляем лишние записи...");
	Лог.Информация(Строка(ТекущаяДата())+" Удаляем лишние записи");
    //удаляем более старшие версии
    н = 0;
    Для Каждого ЭлементМассива Из массивФайлов Цикл
        н = н + 1;

        Если н > _файловОставлять Тогда
            //удаляем файлы старше N версии 
            Сообщить("Удаляем "+Строка(ЭлементМассива.Имя));
			Лог.Информация(Строка(ТекущаяДата())+" Удаляем "+Строка(ЭлементМассива.Имя));
            УдалитьФайлы(_каталогРегистратора, ЭлементМассива.Имя);
        Иначе
            //Сообщить("Оставляем "+Строка(ЭлементМассива.Имя));
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры

//основное действо

//заполняем первоначальные параметры

_текущийКаталог ="C:\1cbackupreg"; //каталог бекапера
_каталогБазы = "C:\1Cbases\UNF"; //каталог базы
_логин = "";
_пароль = "";
_копируемыйФайл = "ночнаявыгрузка.dt";
_каталогРегистратора = "D:\YandexDisk\1cbackup-base-UNF\";
_маскаФайлов = "*.dt";
_расширениеФайлов = ".dt";
_имяФайловЗаписи = "dt";
_файловОставлять = 3; //количество бекапов

//открываем _каталогЗаписиФайлЖурнала = Новый ВыводЛогаВФайл
Лог = Логирование.ПолучитьЛог("oscript.backuplog.messages");
ФайлЖурнала = Новый ВыводЛогаВФайл;
ФайлЖурнала.ОткрытьФайл(_текущийКаталог+"\backuplog.txt");
Лог.ДобавитьСпособВывода(ФайлЖурнала);

//бекапим
Бэкап();

//бэкапрегистратор
//Копируем
ДействиеКопии();
//сортируем
массивФайлов = ПолучитьСписокФайлов();
//удаляем
УдаляемЛишниеКопии(массивФайлов);

Лог.Закрыть(); // при включении логирования в файл рекомендуется закрывать лог.
